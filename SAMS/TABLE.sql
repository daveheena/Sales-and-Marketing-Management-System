
  CREATE TABLE "SCOTT"."ACTIVITY_MASTER" 
   (	"ACT_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"ACT_TYPE" VARCHAR2(50 CHAR), 
	"ACT_NAME" VARCHAR2(50 CHAR), 
	"ACT_FOR" VARCHAR2(50 CHAR), 
	"ACT_DUE_DATE" VARCHAR2(2 CHAR), 
	"ACT_DUE_MONTH" VARCHAR2(3 CHAR), 
	"ACT_DUE_YEAR" VARCHAR2(4 CHAR), 
	"ACT_DETAIL" VARCHAR2(200 CHAR), 
	"ACT_LEADER" VARCHAR2(20 CHAR), 
	"ACT_MEMBER" VARCHAR2(200 CHAR), 
	 CONSTRAINT "ACTIVITY_MASTER_PK" PRIMARY KEY ("ACT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."ACTIVITY_MASTER_TRIGGER" before insert on "SCOTT"."ACTIVITY_MASTER"    for each row begin     if inserting then       if :NEW."ACT_ID" is null then          select ACTIVITY_MASTER_SEQUENCE.nextval into :NEW."ACT_ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."ACTIVITY_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."ADMIN_MASTER" 
   (	"USERNAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(100 BYTE), 
	 CONSTRAINT "ADMIN_MASTER_PK" PRIMARY KEY ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE TABLE "SCOTT"."CLIENT_MASTER" 
   (	"CL_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"CL_FIRST_NAME" VARCHAR2(50 CHAR), 
	"CL_MIDDLE_NAME" VARCHAR2(50 CHAR), 
	"CL_LAST_NAME" VARCHAR2(50 CHAR), 
	"CL_COMPANY_ID" NUMBER(*,0), 
	"CL_COMPANY_NAME" VARCHAR2(200 CHAR), 
	"CL_PHONE_NO" NUMBER(*,0), 
	"CL_EMAIL_ID" VARCHAR2(50 CHAR), 
	 CONSTRAINT "CLIENT_MASTER_PK" PRIMARY KEY ("CL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."CLIENT_MASTER_TRIGGER" before insert on "SCOTT"."CLIENT_MASTER"    for each row begin     if inserting then       if :NEW."CL_ID" is null then          select CLIENT_MASTER_SEQUENCE.nextval into :NEW."CL_ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."CLIENT_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."COMPANY_MASTER" 
   (	"C_ID" NUMBER(*,0), 
	"C_NAME" VARCHAR2(200 CHAR), 
	"C_PHONE_NO" VARCHAR2(11 CHAR), 
	"C_EMAIL_ID" VARCHAR2(50 CHAR), 
	"C_ADDRESS" VARCHAR2(50 CHAR), 
	"C_CITY" VARCHAR2(50 CHAR), 
	"C_STATE" VARCHAR2(50 CHAR), 
	"C_COUNTRY" VARCHAR2(50 CHAR), 
	 CONSTRAINT "COMPANY_MASTER_PK" PRIMARY KEY ("C_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."COMPANY_MASTER_TRIGGER" before insert on "SCOTT"."COMPANY_MASTER"    for each row begin     if inserting then       if :NEW."C_ID" is null then          select COMPANY_MASTER_SEQUENCE.nextval into :NEW."C_ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."COMPANY_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."DEPT_MASTER" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 CHAR) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(100 CHAR) NOT NULL ENABLE, 
	 CONSTRAINT "DEPT_MASTER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."DEPT_MASTER_TRIGGER" before insert on "SCOTT"."DEPT_MASTER"    for each row begin     if inserting then       if :NEW."ID" is null then          select DEPT_MASTER_SEQUENCE.nextval into :NEW."ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."DEPT_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."DESIG_MASTER" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 CHAR), 
	"DESCRIPTION" VARCHAR2(100 CHAR), 
	 CONSTRAINT "DESIG_MASTER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."DESIG_MASTER_TRIGGER" before insert on "SCOTT"."DESIG_MASTER"    for each row begin     if inserting then       if :NEW."ID" is null then          select DESIG_MASTER_SEQUENCE.nextval into :NEW."ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."DESIG_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."LEAD_MASTER" 
   (	"LEAD_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"LEAD_TYPE" VARCHAR2(50 CHAR), 
	"LEAD_SALESMAN" VARCHAR2(20 CHAR), 
	"LEAD_CLIENT" VARCHAR2(20 CHAR), 
	"LEAD_DUE_DATE" VARCHAR2(2 CHAR), 
	"LEAD_DUE_MONTH" VARCHAR2(3 CHAR), 
	"LEAD_DUE_YEAR" VARCHAR2(4 CHAR), 
	"LEAD_DETAIL" VARCHAR2(200 CHAR), 
	 CONSTRAINT "LEAD_MASTER_PK" PRIMARY KEY ("LEAD_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."LEAD_MASTER_TRIGGER" before insert on "SCOTT"."LEAD_MASTER"    for each row begin     if inserting then       if :NEW."LEAD_ID" is null then          select LEAD_MASTER_SEQUENCE.nextval into :NEW."LEAD_ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."LEAD_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."PREV_SALES_MASTER" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"S_ID" NUMBER(*,0), 
	"TARGET" VARCHAR2(15 CHAR), 
	"TARGET_DUE_DATE" VARCHAR2(3 CHAR), 
	"TARGET_DUE_MONTH" VARCHAR2(4 CHAR), 
	"TARGET_DUE_YEAR" VARCHAR2(5 CHAR), 
	"STATUS" VARCHAR2(15 CHAR), 
	 CONSTRAINT "PREV_SALES_MASTER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."PREV_SALES_MASTER_TRIGGER" before insert on "SCOTT"."PREV_SALES_MASTER"    for each row begin     if inserting then       if :NEW."ID" is null then          select PREV_SALES_MASTER_SEQUENCE.nextval into :NEW."ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."PREV_SALES_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."PRODUCT_MASTER" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 BYTE), 
	"QUANTITY" NUMBER(10,0), 
	 CONSTRAINT "PRODUCT_MASTER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."ADD_PRODUCT_MASTER" before insert on "SCOTT"."PRODUCT_MASTER"    for each row begin     if inserting then       if :NEW."ID" is null then          select PRODUCT_MASTER_SEQUENCE.nextval into :NEW."ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."ADD_PRODUCT_MASTER" ENABLE;
 

  CREATE TABLE "SCOTT"."SALESMAN_MASTER" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(50 CHAR), 
	"MIDDLE_NAME" VARCHAR2(50 CHAR), 
	"LAST_NAME" VARCHAR2(50 CHAR), 
	"USERNAME" VARCHAR2(50 CHAR), 
	"PASSWORD" VARCHAR2(100 CHAR), 
	"GENDER" VARCHAR2(6 CHAR), 
	"BIRTHDATE_DAY" VARCHAR2(2 CHAR), 
	"BIRTHDATE_MONTH" VARCHAR2(4 CHAR), 
	"BIRTHDATE_YEAR" VARCHAR2(4 CHAR), 
	"DEPARTMENT" VARCHAR2(30 CHAR), 
	"PHONE_NO" NUMBER(*,0), 
	"EMAIL_ID" VARCHAR2(40 CHAR), 
	"ADDRESS" VARCHAR2(100 CHAR), 
	"UNDER" VARCHAR2(30 CHAR), 
	"PHOTO" VARCHAR2(40 CHAR), 
	"TARGET" VARCHAR2(15 CHAR), 
	"TARGET_STATUS" VARCHAR2(15 CHAR), 
	"DUE_DATE_DAY" VARCHAR2(2 CHAR), 
	"DUE_DATE_MONTH" VARCHAR2(4 CHAR), 
	"DUE_DATE_YEAR" VARCHAR2(4 CHAR)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."SALESMAN_MASTER_TRIGGER" before insert on "SCOTT"."SALESMAN_MASTER"    for each row begin     if inserting then       if :NEW."ID" is null then          select SALESMAN_MASTER_SEQUENCE.nextval into :NEW."ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."SALESMAN_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."SALESMANAGER_MASTER" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(50 CHAR), 
	"MIDDLE_NAME" VARCHAR2(50 CHAR), 
	"LAST_NAME" VARCHAR2(50 CHAR), 
	"USERNAME" VARCHAR2(50 CHAR), 
	"PASSWORD" VARCHAR2(100 CHAR), 
	"GENDER" VARCHAR2(6 CHAR), 
	"BIRTHDATE_DAY" VARCHAR2(2 CHAR), 
	"BIRTHDATE_MONTH" VARCHAR2(4 CHAR), 
	"BIRTHDATE_YEAR" VARCHAR2(4 CHAR), 
	"DEPARTMENT" VARCHAR2(30 CHAR), 
	"PHONE_NO" NUMBER(*,0), 
	"EMAIL_ID" VARCHAR2(40 CHAR), 
	"ADDRESS" VARCHAR2(100 CHAR), 
	"PHOTO" VARCHAR2(40 CHAR), 
	 CONSTRAINT "SALESMANAGER_MASTER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."SALESMANAGER_MASTER_TRIGGER" before insert on "SCOTT"."SALESMANAGER_MASTER"    for each row begin     if inserting then       if :NEW."ID" is null then          select SALESMANAGER_MASTER_SEQUENCE.nextval into :NEW."ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."SALESMANAGER_MASTER_TRIGGER" ENABLE;
 

  CREATE TABLE "SCOTT"."STOCK_MASTER" 
   (	"ST_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"SMAN" VARCHAR2(20 CHAR), 
	"CL" VARCHAR2(20 CHAR), 
	"PRODNAME" VARCHAR2(20 CHAR), 
	"QTY" NUMBER, 
	"DAY" VARCHAR2(2 CHAR), 
	"MONTH" VARCHAR2(4 CHAR), 
	"YEAR" VARCHAR2(4 CHAR), 
	 CONSTRAINT "STOCK_MASTER_PK" PRIMARY KEY ("ST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
 

  CREATE OR REPLACE TRIGGER "SCOTT"."STOCK_MASTER_TRIGGER" before insert on "SCOTT"."STOCK_MASTER"    for each row begin     if inserting then       if :NEW."ST_ID" is null then          select STOCK_MASTER_SEQUENCE.nextval into :NEW."ST_ID" from dual;       end if;    end if; end;
/
ALTER TRIGGER "SCOTT"."STOCK_MASTER_TRIGGER" ENABLE;
 
